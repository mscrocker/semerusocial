<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!-- POM Relationships -->

    <modelVersion>4.0.0</modelVersion>
    <artifactId>backend</artifactId>

    <parent>
        <groupId>es.udc.fi.dc.fd</groupId>
        <artifactId>semerusocial</artifactId>
        <version>1.4-SNAPSHOT</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jcl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>el-impl</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>java-hamcrest</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
        </dependency>
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-messaging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-websocket</artifactId>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>${jsonpath.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>${hikari.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jsonwebtoken.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${javax.xml.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-jcl</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-web</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.web</groupId>
                <artifactId>el-impl</artifactId>
                <version>${glassfish.el}</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>java-hamcrest</artifactId>
                <version>${hamcrest.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-ehcache</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>${javassist.version}</version>
            </dependency>
            <dependency>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-core</artifactId>
                <version>${liquibase.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${spring.boot.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-jpa</artifactId>
                <version>${spring.data.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- /////////////////// -->

    <!-- Build Settings -->

    <packaging>war</packaging>
    <build>
        <defaultGoal>clean package</defaultGoal>
        <resources>
            <resource>
                <directory>src/main/resources/</directory>
            </resource>
            <resource>
                <directory>src/main/resources/</directory>
                <includes>
                    <include>context/application-context.xml</include>
                    <include>config/persistence-access.properties</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <executions>
                        <execution>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${failsafe.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-changes-plugin</artifactId>
                <executions>
                    <execution>
                        <id>check-changes</id>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>changes-check</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>validate-changes</id>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>changes-validate</goal>
                        </goals>
                        <configuration>
                            <failOnError>true</failOnError>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-database</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireProperty>
                                    <property>database.tag</property>
                                    <message><![CDATA[Give a Spring database profile.]]></message>
                                </requireProperty>
                                <requireProperty>
                                    <property>database.url</property>
                                    <message><![CDATA[Give a URL for the database.]]></message>
                                </requireProperty>
                                <requireProperty>
                                    <property>database.username</property>
                                    <message><![CDATA[Give a username for the database.]]></message>
                                </requireProperty>
                                <requireProperty>
                                    <property>database.password</property>
                                    <message><![CDATA[Give a password for the database.]]></message>
                                </requireProperty>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <webResources>
                        <resource>
                            <filtering>true</filtering>
                            <directory>${project.basedir}/src/main/resources/config</directory>
                            <targetPath>WEB-INF/classes/config</targetPath>
                            <includes>
                                <include>persistence-access.properties</include>
                            </includes>
                        </resource>
                    </webResources>
                    <!-- Variables to to override will be delimited with a @. -->
                    <!-- This avoids collisions with Spring variables. -->
                    <!-- So instead of replacing ${project.name} Maven will replace @project.name@. -->
                    <useDefaultDelimiters>true</useDefaultDelimiters>
                </configuration>
            </plugin>
            <plugin>
                <!-- Resources -->
                <!-- Handles the project resources. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <!-- Variables to to override will be delimited with a @. -->
                    <!-- This avoids collisions with Spring variables. -->
                    <!-- So instead of replacing ${project.name} Maven will replace @project.name@. -->
                    <useDefaultDelimiters>true</useDefaultDelimiters>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- /////////////////// -->

    <!-- Project information -->

    <name>backend</name>
    <description>SemeruSocial Backend module</description>


    <!-- /////////////////// -->

    <!-- Build Environment » Environment Information -->

    <properties>
        <h2.version>1.4.197</h2.version>
        <hamcrest.version>2.0.0.0</hamcrest.version>
        <hibernate.version>5.2.17.Final</hibernate.version>
        <hikari.version>3.4.2</hikari.version>
        <failsafe.version>3.0.0-M3</failsafe.version>
        <javax.xml.version>2.4.0-b180830.0359</javax.xml.version>
        <javassist.version>3.26.0-GA</javassist.version>
        <jsonpath.version>2.4.0</jsonpath.version>
        <jsonwebtoken.version>0.9.1</jsonwebtoken.version>
        <liquibase.version>3.8.7</liquibase.version>
        <log4j.version>2.13.1</log4j.version>
        <mockito.version>3.3.0</mockito.version>
        <mysql.version>8.0.12</mysql.version>
        <plugin.docker.version>0.33.0</plugin.docker.version>
        <plugin.jacoco.version>0.8.4</plugin.jacoco.version>
        <plugin.surefire.version>3.0.0-M3</plugin.surefire.version>
        <postgresql.version>42.1.4</postgresql.version>
        <slf4j.version>2.0.0-alpha1</slf4j.version>
        <spring.data.version>2.0.7.RELEASE</spring.data.version>
        <spring.boot.security.version>1.4.1.RELEASE</spring.boot.security.version>
    </properties>

    <!-- /////////////////// -->

    <!-- Profiles -->

    <profiles>
        <profile>
            <id>h2</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <baseDataBaseUrl>jdbc:h2:mem:semerusocial</baseDataBaseUrl>
                <database.password></database.password>
                <database.tag>h2</database.tag>
                <database.testUrl>${baseDataBaseUrl}_test?serverTimezone=UTC</database.testUrl>
                <database.url>${baseDataBaseUrl}</database.url>
                <database.username>sa</database.username>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                    <version>${h2.version}</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>mysql</id>
            <properties>
                <database.name>friendmatch</database.name>
                <database.password>friendmatch</database.password>
                <database.port>3307</database.port>
                <database.tag>mysql</database.tag>
                <database.testUrl>jdbc:mysql://localhost:${database.port}/${database.name}?serverTimezone=UTC
                </database.testUrl>
                <database.url>jdbc:mysql://localhost:3306/${database.name}?serverTimezone=UTC</database.url>
                <database.username>friendmatch</database.username>
                <database.version>8.0.19</database.version>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                    <version>${mysql.version}</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${plugin.docker.version}</version>
                        <executions>
                            <execution>
                                <id>prepare-it-database</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <images>
                                        <image>
                                            <name>mysql:${database.version}</name>
                                            <run>
                                                <containerNamePattern>semerusocial-it-database</containerNamePattern>
                                                <ports>
                                                    <port>${database.port}:3306</port>
                                                </ports>
                                                <tmpfs>/var/lib/mysql</tmpfs>
                                                <wait>
                                                    <log>(?s)ready for connections.*ready for connections</log>
                                                    <time>400000</time>
                                                </wait>
                                                <env>
                                                    <MYSQL_DATABASE>${database.name}</MYSQL_DATABASE>
                                                    <MYSQL_USER>${database.username}</MYSQL_USER>
                                                    <MYSQL_PASSWORD>${database.password}</MYSQL_PASSWORD>
                                                    <MYSQL_ALLOW_EMPTY_PASSWORD>yes</MYSQL_ALLOW_EMPTY_PASSWORD>
                                                </env>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop it database</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                                <configuration>
                                    <containerNamePattern>semerusocial-it-database</containerNamePattern>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <!-- /////////////////// -->

</project>
